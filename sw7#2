main:
li s0, 0x11000000
li sp, 0x00010000
lw s1, 0x00(s0)
srli t1, s1, 16 #store left number in t1
slli t2, s1, 16 #get rid of left 16-bits
srli t2, t2, 16 #shift number back to right and store in t2
mv a0, t1
mv a1, t2
call gcd
j end


gcd: 
beq a0, a1, equal

bgt a0, a1, gt
j lt


gt:
sub a0, a0, a1
#addi sp, sp, -4 
#sw ra, 0x00(sp) #store return address  
j gcd

lt:
sub a1, a1, a0
j gcd

equal:
mv a2, a0
ret

end:
sw a2, 0x20(s0)
j main